#include <Jimmy_wm_audio/wm_control.h>
#include <Jimmy_wm_audio/wm_scripts.h>

using namespace intel_jimmy;

WM_teleop::WM_teleop() :
		state_a(0),
		state_b(0),
		state_id_p(0),
		state_id_n(0),
		m_trig(0),
		m_idx(0)
{

  joy_sub_ = nh_.subscribe<sensor_msgs::Joy>("joy", 10, &WM_teleo::joyCallback, this);

}

void WM_teleop::joyCallback(const sensor_msgs::Joy::ConstPtr& joy)
{
	int tmp_a = joy->buttons[WM_BTN_A];
	int tmp_b = joy->buttons[WM_BTN_B];
	int tmp_p = joy->buttons[WM_BTN_PP];
	int tmp_n = joy->buttons[WM_BTN_MM];
	int tmp_0 = joy->buttons[WM_BTN_HOME];

	m_trig = WM_STA_NONE;

	// update B
	state_b = tmp_b;

	// update A
	if(state_b == 1 && tmp_a == 1) {
		state_a = 1;
		m_trig = WM_STA_ACT;
	} else {
		state_a = 0;
	}

	// update idx
	if(tmp_p != state_id_p) {
		state_id_p = tmp_p;
		m_idx += state_id_p;
		m_trig = WM_STA_INFO;
	}

	if(tmp_n != state_id_n) {
		state_id_n = tmp_n;
		m_idx -= state_id_n;
		m_trig = WM_STA_INFO;
	}

	if(1 == tmp_0) {
		m_idx = 0;
		m_trig = WM_STA_INFO;
	}
}

