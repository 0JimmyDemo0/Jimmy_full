#pragma once

#include <ros/ros.h>
#include <sensor_msgs/Joy.h>

namespace intel_jimmy {

class WM_teleop {

public:
	WM_teleop();
	inline int IsReady() { return state_a; }
	inline int CurState() { return m_trig; }
	int PlayIndex();

	enum m_WM_STA {
		WM_STA_NONE = 0,
		WM_STA_INFO,
		WM_STA_ACT
	};

private:
	void joyCallback(const sensor_msgs::Joy::ConstPtr& joy);
	void IndexBND();
  
	ros::NodeHandle nh_;
	ros::Subscriber joy_sub_;

	int state_a, state_b;
	int state_id_p, state_id_n;
	int m_idx;
	int m_trig;

	enum m_WM_BTN {
		WM_BTN_1 = 0,
		WM_BTN_A = 2,
		WM_BTN_B,
		WM_BTN_PP,
		WM_BTN_MM,

		WM_BTN_RK_L,
		WM_BTN_RK_R,
		WM_BTN_RK_U,
		WM_BTN_RK_D,

		WM_BTN_HOME
	};
};

}

